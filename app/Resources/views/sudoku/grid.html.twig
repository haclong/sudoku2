{% extends 'base.html.twig' %}

{% block body %}
    

<!--form method="post" action="<?php // echo $this->url('home', array('size' => count($grid))) ; ?>"-->
<!--form name="sudokuGrid"-->   
    <button id="loadGridButton"   class="btn btn-default" type="submit" name="load" value="get">Charger une grille</button>

    <button class="btn btn-default" type="submit" name="submit" value="start">Résoudre</button>
    <button id="playGridButton" class="btn btn-default" type="submit" name="submit" value="play">Jouer</button>
    <button id="reloadGridButton" class="btn btn-default" type="submit" name="submit" value="reset">Recommencer</button>

    <button id="resetGridButton" class="btn btn-default" type="submit" name="empty" value="clear">Nouvelle grille</button>
    <button id="saveGridButton"  class="btn btn-default" type="submit" name="save" value="save">Enregistrer une nouvelle grille</button>
<p>
    <div>Insérer les chiffres de départ de la grille.</div>
    <div>Cliquer sur 'Résoudre' pour que le robot remplisse la grille seul.</div>
    <div>Cliquer sur 'Jouer' pour résoudre vous meme la grille.</div>
    <div>Cliquer sur 'Recommencer' pour recommencer la grille.</div>
    <div>Cliquer sur 'Nouvelle grille' pour vider la grille complètement.</div>
</p>

<table class="sudoku_grid">
    {% for row in 0..size-1 %}
    <tr>
        {% for col in 0..size-1 %}
            {% set topStyle = "" %}
            {% set leftStyle = "" %}
            {% set sqrt = size |sqrt %}
            {% if row % sqrt == 0 %}
                {% set topStyle = " region_border_top" %}
            {% endif %}
            {% if col % sqrt == 0 %}
                {% set leftStyle = " region_border_left" %}
            {% endif %}
            
            <td class="sudoku_case{{topStyle}}{{leftStyle}}"><input type="text" class="case" size="1" name="t[{{row}}][{{col}}]" id="t.{{row}}.{{col}}" value=""/></td>
        {% endfor %}
    </tr>
    {% endfor %}
</table>
<!--/form-->
{% endblock %}

{% block javascripts %}

    <script>
        $("#loadGridButton").click(function() {
//            alert("getGridButton") ;
//            $.getJSON("{{path('loadGrid')}}", refreshGrid); 
            $.ajax({
              dataType: "json",
              url: "{{path('loadGrid')}}",
              data: {size: "{{size}}"},
              success: loadGrid
            });
        }) ;

        $("#reloadGridButton").click(function() {
            $.ajax({
              dataType: "json",
              url: "{{path('reloadGrid')}}",
              success: clearAndLoadGrid
            });
        }) ;


        $("#resetGridButton").click(function() {
//            clearGrid() ;
            $.ajax({
              dataType: "json",
              url: "{{path('resetGrid')}}",
              success: clearGrid
            });
        }) ;

        $("#saveGridButton").click(function() {
//            alert(document.getElementsByTagName("input").length) ;
            var tilesInput = document.getElementsByTagName("input") ;
            var i ;
            var tilesData = new Array() ;
            
            for(i=0; i<tilesInput.length; i++) {
                tilesData[i] = {} ;
                tilesData[i]['id'] = tilesInput[i].id ;
                tilesData[i]['value'] = tilesInput[i].value ;
            }
            
//            alert(JSON.stringify({grid:{size:{{size}},tiles:tilesData}})) ;
            $.ajax({
                type: "POST",
                url: "{{path('saveGrid')}}",
                data: JSON.stringify({grid:{size:"{{size}}",tiles:tilesData}}),
                contentType: 'application/json',
                success: function(data) {alert(data);},
                dataType: "json"
            });
        }) ;
        
        $("input:text.case").change(function() {
            var id = $( this ).attr('id') ;
            var value = $( this ).val() ;
            
            if(value) {
                $.ajax({
                    type: "POST",
                    url: "{{path('setTile')}}",
                    data: JSON.stringify({tile:{id:id, value:value}}),
                    contentType: 'application/json',
                    success: setTile,
                    dataType: "json"
                });
            } else {
                var inputElement = document.getElementById(id) ;
                var parent = inputElement.parentNode ;
                parent.style.backgroundColor = "#ffffff";
                inputElement.style.backgroundColor = "#ffffff" ;
            }
        }) ;

        function loadGrid(data)
        {
//            var myData = JSON.parse(JSON.stringify(data)) ;
            var myData = data.grid ;
            var i; 
//            alert(JSON.stringify(myData)) ;
//            alert("Data: " + data.getGrid.size) ;
//            alert("Data: " + myData.tiles.length) ;
            for(i=0; i<myData.tiles.length; i++) {
                document.getElementById(myData.tiles[i].id).value = myData.tiles[i].value;
                if(myData.tiles[i].value != null)
                {
                    document.getElementById(myData.tiles[i].id).setAttribute("readonly", "readonly") ;
                }
            }
        }

        function clearGrid()
        {
//            alert(document.getElementsByTagName("input").length) ;
            var tilesInput = document.getElementsByTagName("input") ;
            var i ;

            for(i=0; i<tilesInput.length; i++) {
                tilesInput[i].value = "" ;
            }
        }
        
        function clearAndLoadGrid(data)
        {
            clearGrid() ;
            loadGrid(data) ;
        }
        
        function setTile(data)
        {
            if(data.hasOwnProperty('solved') )
            {
                var elements = document.querySelectorAll('td.sudoku_case') ;
                for (var element in elements)
                {
                    elements[element].style.backgroundColor = "#6eea59" ;
                    elements[element].children[0].style.backgroundColor = "#6eea59" ;
                }
            }
            if(data.hasOwnProperty('error')) 
            {
                var myData = data.error ;
                var inputElement = document.getElementById(myData.id) ;
                var parent = inputElement.parentNode ;
                parent.style.backgroundColor = "#ff0000";
                inputElement.style.backgroundColor = "#ff0000" ;
            } else
            {
                var elements = document.querySelectorAll('td.sudoku_case') ;
                for (var element in elements)
                {
                    elements[element].style.backgroundColor = "#ffffff" ;
                    elements[element].children[0].style.backgroundColor = "#ffffff" ;
                }
            }
        }
    </script>

{% endblock %}
